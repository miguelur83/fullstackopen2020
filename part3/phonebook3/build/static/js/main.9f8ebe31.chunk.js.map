{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","newObject","axios","post","then","response","data","id","put","delete","Filter","filterHandler","onChange","Notification","message","type","className","PersonForm","props","onSubmit","handleOnSubmit","handleNameChange","handleNumberChange","Persons","persons","filter","handleDelete","person","name","toLowerCase","includes","map","Person","number","onClick","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","errorMessage","setErrorMessage","notificationMessage","setNotificationMessage","useEffect","console","log","get","event","target","value","preventDefault","newPerson","findIndex","theperson","find","window","confirm","personService","setTimeout","catch","error","returnedPerson","concat","aperson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f8ebe31.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst erase = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, erase}","import React, { useState , useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filter, setFilter ] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [notificationMessage, setNotificationMessage] = useState(null)\r\n\r\n  useEffect (() => {\r\n    console.log('effect')\r\n    axios\r\n      .get('https://safe-reef-89727.herokuapp.com/api/persons')\r\n      .then(response => {\r\n        setPersons(response.data)\r\n        console.log(response.data)\r\n    })\r\n  }, [])\r\n    \r\n  const handleOnSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n    console.log('button clicked', event.target)\r\n    if (persons.findIndex(person => person.name === newName) !== -1) {\r\n      console.log(\"FOUND\");\r\n      var theperson = persons.find((person) => person.name === newName)\r\n      if (newNumber != theperson.number){\r\n        if (window.confirm(`${newName} is already added to phonebook. Do you want to update their number?`)) { \r\n          theperson.number = newNumber\r\n          personService\r\n          .update(theperson.id, theperson)\r\n          .then(response => {\r\n            setPersons(persons.map((person) => (person.id === theperson.id?theperson:person)))\r\n            console.log(response)\r\n            setNotificationMessage(\r\n              `${theperson.name}'s number was updated to the server`\r\n            )\r\n            setTimeout(() => {\r\n              setNotificationMessage(null)\r\n            }, 5000)\r\n          })\r\n          .catch(error => {\r\n            setErrorMessage(\r\n              `${theperson.name} was already deleted from the server`\r\n            )\r\n            setPersons(persons.filter((person) => (person.id != theperson.id)))\r\n            setTimeout(() => {\r\n              setErrorMessage(null)\r\n            }, 5000)\r\n          })\r\n        }\r\n      } else {\r\n        setErrorMessage(\r\n          `${newName} is already added to phonebook`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n      }\r\n    } else {\r\n      console.log(\"Saving person\");\r\n      personService\r\n      .create(newPerson)\r\n      .then(returnedPerson => {\r\n        setPersons(persons.concat(returnedPerson))\r\n        setNotificationMessage(\r\n          `${returnedPerson.name} was saved to the server`\r\n        )\r\n        setTimeout(() => {\r\n          setNotificationMessage(null)\r\n        }, 5000)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDelete = (event) => {\r\n    var person = persons.find(person => person.id == event.target.id)\r\n    if (window.confirm(`Do you really want to delete ${person.name}?`)) { \r\n      console.log(\"Delete \", event.target.id);\r\n      personService\r\n      .erase(event.target.id)\r\n      .then(response => {\r\n        console.log(response);\r\n        setPersons(persons.filter(person => person.id != event.target.id))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `${person.name} was already deleted from the server`\r\n        )\r\n        setPersons(persons.filter((aperson) => (aperson.id != person.id)))\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notificationMessage} type=\"notification\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <Filter filterHandler = {handleFilterChange} />\r\n      <h3>Add a new person</h3>\r\n      <PersonForm handleOnSubmit={handleOnSubmit} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\r\n      <h3>Numbers</h3>\r\n      <Persons persons={persons} filter={filter} handleDelete={handleDelete} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Filter = ({filterHandler}) => {\r\n  return (\r\n    <div>\r\n      filter by name: <input onChange={filterHandler} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleOnSubmit}>\r\n      <div>\r\n        name: <input onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input onChange={props.handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst Persons = ({persons, filter, handleDelete}) => {\r\n  return (\r\n    <ul>\r\n      {persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase())).map(person =>\r\n        <Person key={person.name} person={person} handleDelete={handleDelete} />\r\n      )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst Person = ({person, handleDelete}) => {\r\n  return(\r\n    <li key={person.name}>{person.name}: {person.number} <button id={person.id} onClick={handleDelete}>delete</button></li>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}